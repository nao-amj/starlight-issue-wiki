---
import { BASE_PATH, SITE_TITLE, SITE_DESCRIPTION } from '../../config';
import SearchBar from '../../components/SearchBar.astro';
import CustomFooter from '../../components/CustomFooter.astro';

// Issue„Éá„Éº„Çø„ÇíÂèñÂæó
async function fetchIssues() {
  try {
    // GitHub API„Çí‰ΩøÁî®„Åó„Å¶issue„ÇíÂèñÂæó
    const response = await fetch('https://api.github.com/repos/nao-amj/starlight-issue-wiki/issues?state=all&per_page=100');
    if (!response.ok) {
      throw new Error(`GitHub API error: ${response.status}`);
    }
    const allItems = await response.json();
    // „Éó„É´„É™„ÇØ„Ç®„Çπ„Éà„ÇíÈô§Â§ñ„Åô„Çã
    return allItems.filter(item => !item.pull_request);
  } catch (error) {
    console.error('Error fetching issues:', error);
    return [];
  }
}

const issues = await fetchIssues();

// „Ç´„ÉÜ„Ç¥„É™„ÉºÂà•„Ç∞„É´„Éº„ÉóÂåñ
const categories = {};
issues.forEach(issue => {
  if (issue.labels && issue.labels.length > 0) {
    issue.labels.forEach(label => {
      if (!categories[label.name]) {
        categories[label.name] = [];
      }
      // ÈáçË§á„ÇíÈÅø„Åë„Çã„Åü„ÇÅ„Å´Êó¢„Å´ËøΩÂä†„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ„ÅãÁ¢∫Ë™ç
      if (!categories[label.name].some(existingIssue => existingIssue.number === issue.number)) {
        categories[label.name].push(issue);
      }
    });
  } else {
    if (!categories['Êú™ÂàÜÈ°û']) {
      categories['Êú™ÂàÜÈ°û'] = [];
    }
    if (!categories['Êú™ÂàÜÈ°û'].some(existingIssue => existingIssue.number === issue.number)) {
      categories['Êú™ÂàÜÈ°û'].push(issue);
    }
  }
});

// „Ç´„ÉÜ„Ç¥„É™„Éº„Çí„Ç¢„É´„Éï„Ç°„Éô„ÉÉ„ÉàÈ†Ü„Å´„ÇΩ„Éº„Éà
const sortedCategories = Object.keys(categories).sort();

// ÊúÄÊñ∞„ÅÆÊõ¥Êñ∞È†Ü„Å´Issue„Çí„ÇΩ„Éº„Éà
const recentIssues = [...issues].sort((a, b) => 
  new Date(b.updated_at) - new Date(a.updated_at)
);
---

<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>„Éö„Éº„Ç∏‰∏ÄË¶ß | {SITE_TITLE}</title>
  <meta name="description" content={SITE_DESCRIPTION}>
  <link rel="stylesheet" href={`${BASE_PATH}/styles/global.css`}>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap" rel="stylesheet">
</head>
<body>
  <header>
    <div class="container">
      <div class="header-content">
        <h1><a href={BASE_PATH + "/"}>GitWiki Hub</a></h1>
        <div class="nav-container">
          <nav>
            <a href={BASE_PATH + "/"}>„Éõ„Éº„É†</a>
            <a href={`${BASE_PATH}/wiki/1`}>„ÅØ„Åò„ÇÅ„Å´</a>
            <a href={`${BASE_PATH}/wiki`} class="active">„Éö„Éº„Ç∏‰∏ÄË¶ß</a>
            <a href="https://github.com/nao-amj/starlight-issue-wiki" target="_blank">GitHub</a>
          </nav>
          <button id="settings-toggle-btn" class="settings-toggle-btn">Ë®≠ÂÆö</button>
        </div>
      </div>
    </div>
  </header>

  <main class="container">
    <div class="page-header">
      <h1>„Éö„Éº„Ç∏‰∏ÄË¶ß</h1>
      <p class="page-description">„Ç´„ÉÜ„Ç¥„É™„ÉºÂà•„ÅÆWiki„Éö„Éº„Ç∏‰∏ÄË¶ß„Åß„Åô</p>
    </div>

    <SearchBar />
    
    <div class="content-grid">
      <div class="main-content">
        <div class="categories-section">
          {sortedCategories.map(category => (
            <div class="category-block" id={category}>
              <h2 class="category-title">
                <span class="category-icon">üìÇ</span>
                {category}
              </h2>
              <div class="category-items">
                {categories[category].map(issue => (
                  <div class="category-item">
                    <a href={`${BASE_PATH}/wiki/${issue.number}`} class="item-link">
                      <span class="item-title">{issue.title}</span>
                      <div class="item-meta">
                        <span class="item-number">#{issue.number}</span>
                        <span class="item-date">{new Date(issue.updated_at).toLocaleDateString('ja-JP')}</span>
                      </div>
                    </a>
                  </div>
                ))}
              </div>
            </div>
          ))}
        </div>

        <div class="list-section">
          <h2>„Åô„Åπ„Å¶„ÅÆ„Éö„Éº„Ç∏</h2>
          <div class="list-items">
            {recentIssues.map(issue => (
              <div class="list-item">
                <a href={`${BASE_PATH}/wiki/${issue.number}`} class="item-link">
                  <div class="item-main">
                    <span class="item-title">{issue.title}</span>
                    <div class="item-excerpt">
                      {issue.body && issue.body.length > 100 ? `${issue.body.substring(0, 100)}...` : issue.body}
                    </div>
                  </div>
                  <div class="item-side">
                    <div class="item-meta">
                      <span class="item-number">#{issue.number}</span>
                      <span class="item-date">{new Date(issue.updated_at).toLocaleDateString('ja-JP')}</span>
                    </div>
                    {issue.labels && issue.labels.length > 0 && (
                      <div class="item-labels">
                        {issue.labels.map(label => (
                          <span class="tag" style={`background-color: #${label.color}20; color: #${label.color}; border: 1px solid #${label.color}40;`}>
                            {label.name}
                          </span>
                        ))}
                      </div>
                    )}
                  </div>
                </a>
              </div>
            ))}
          </div>
        </div>
      </div>
      
      <div class="sidebar">
        <div class="card">
          <h2>„Ç´„ÉÜ„Ç¥„É™„Éº</h2>
          <ul class="category-menu">
            {sortedCategories.map(category => (
              <li>
                <a href={`#${category}`} class="category-menu-item">
                  <span class="category-name">{category}</span>
                  <span class="category-count">{categories[category].length}</span>
                </a>
              </li>
            ))}
          </ul>
        </div>
        
        <div class="card">
          <h2>„ÇØ„Ç§„ÉÉ„ÇØ„É™„É≥„ÇØ</h2>
          <ul class="quick-links">
            <li><a href={`${BASE_PATH}/`}>„Éõ„Éº„É†„Å´Êàª„Çã</a></li>
            <li><a href={`${BASE_PATH}/wiki/1`}>‰Ωø„ÅÑÊñπ„Ç¨„Ç§„Éâ</a></li>
            <li><a href="https://github.com/nao-amj/starlight-issue-wiki/issues/new" target="_blank">Êñ∞Ë¶è„Éö„Éº„Ç∏„Çí‰ΩúÊàê</a></li>
          </ul>
        </div>
      </div>
    </div>
  </main>

  <CustomFooter />

  <style>
    header .nav-container {
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    
    header .settings-toggle-btn {
      background-color: #4f6df5;
      color: white;
      padding: 0.5rem 1rem;
      border: none;
      border-radius: 0.375rem;
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s;
      white-space: nowrap;
    }
    
    header .settings-toggle-btn:hover {
      background-color: #3a5ad9;
      transform: translateY(-1px);
    }
  
    .page-header {
      background: linear-gradient(135deg, var(--color-primary), var(--color-primary-dark));
      color: white;
      padding: 2rem 1.5rem;
      margin-bottom: 2rem;
      border-radius: var(--border-radius-md);
      text-align: left;
    }
    
    .page-header h1 {
      margin: 0;
      font-size: 2rem;
    }
    
    .page-description {
      margin: 0.5rem 0 0;
      opacity: 0.9;
      font-size: 1rem;
    }
    
    .content-grid {
      display: grid;
      grid-template-columns: 2fr 1fr;
      gap: 2rem;
    }
    
    .main-content {
      background-color: var(--color-background-panel);
      padding: 2rem;
      border-radius: var(--border-radius-md);
      box-shadow: var(--box-shadow-md);
      border: 1px solid var(--color-border);
    }
    
    .sidebar {
      display: flex;
      flex-direction: column;
      gap: 2rem;
    }
    
    .category-block {
      margin-bottom: 3rem;
    }
    
    .category-title {
      display: flex;
      align-items: center;
      gap: 0.5rem;
      padding-bottom: 0.5rem;
      border-bottom: 2px solid var(--color-primary-light);
      margin-bottom: 1rem;
    }
    
    .category-icon {
      font-size: 1.2rem;
    }
    
    .category-items {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
      gap: 1rem;
    }
    
    .category-item {
      background-color: var(--color-background);
      border: 1px solid var(--color-border);
      border-radius: var(--border-radius-sm);
      transition: transform 0.2s, box-shadow 0.2s;
    }
    
    .category-item:hover {
      transform: translateY(-3px);
      box-shadow: var(--box-shadow-md);
      border-color: var(--color-primary-light);
    }
    
    .item-link {
      display: block;
      padding: 1rem;
      text-decoration: none;
      color: var(--color-text);
    }
    
    .item-title {
      display: block;
      font-weight: 500;
      font-size: 1.1rem;
      color: var(--color-primary);
      margin-bottom: 0.5rem;
    }
    
    .item-meta {
      display: flex;
      justify-content: space-between;
      font-size: 0.8rem;
      color: var(--color-text-light);
    }
    
    .list-section {
      margin-top: 3rem;
    }
    
    .list-items {
      display: flex;
      flex-direction: column;
      gap: 1rem;
    }
    
    .list-item {
      background-color: var(--color-background);
      border: 1px solid var(--color-border);
      border-radius: var(--border-radius-sm);
      transition: transform 0.2s, box-shadow 0.2s;
    }
    
    .list-item:hover {
      transform: translateY(-3px);
      box-shadow: var(--box-shadow-md);
      border-color: var(--color-primary-light);
    }
    
    .list-item .item-link {
      display: flex;
      justify-content: space-between;
      gap: 1rem;
    }
    
    .item-main {
      flex: 1;
    }
    
    .item-side {
      width: 200px;
      border-left: 1px solid var(--color-border);
      padding-left: 1rem;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }
    
    .item-excerpt {
      font-size: 0.9rem;
      color: var(--color-text-light);
      margin-top: 0.5rem;
      display: -webkit-box;
      -webkit-line-clamp: 2;
      -webkit-box-orient: vertical;
      overflow: hidden;
    }
    
    .item-labels {
      display: flex;
      flex-wrap: wrap;
      gap: 0.5rem;
      margin-top: 0.5rem;
    }
    
    .category-menu {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    
    .category-menu-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 0.75rem 0.5rem;
      border-bottom: 1px solid var(--color-border);
      text-decoration: none;
      color: inherit;
    }
    
    .category-menu-item:hover {
      background-color: rgba(37, 99, 235, 0.05);
    }
    
    .category-count {
      background-color: rgba(37, 99, 235, 0.1);
      color: var(--color-primary);
      font-size: 0.8rem;
      padding: 0.2rem 0.5rem;
      border-radius: 999px;
    }
    
    .quick-links {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    
    .quick-links li {
      border-bottom: 1px solid var(--color-border);
    }
    
    .quick-links li:last-child {
      border-bottom: none;
    }
    
    .quick-links a {
      padding: 0.75rem 0.5rem;
      display: flex;
      align-items: center;
      text-decoration: none;
      color: var(--color-text);
    }
    
    .quick-links a:hover {
      background-color: rgba(37, 99, 235, 0.05);
      transform: translateX(3px);
    }
    
    .quick-links a:before {
      content: '‚Üí';
      margin-right: 0.5rem;
      color: var(--color-primary);
    }
    
    @media (max-width: 768px) {
      .content-grid {
        grid-template-columns: 1fr;
      }
      
      .sidebar {
        order: -1;
      }
      
      .category-items {
        grid-template-columns: 1fr;
      }
      
      .list-item .item-link {
        flex-direction: column;
      }
      
      .item-side {
        width: 100%;
        border-left: none;
        border-top: 1px solid var(--color-border);
        padding-left: 0;
        padding-top: 1rem;
      }
      
      .header-content {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
      }
      
      .nav-container {
        width: 100%;
        display: flex;
        justify-content: space-between;
      }
      
      nav {
        display: flex;
        gap: 1rem;
        flex-wrap: nowrap;
        overflow-x: auto;
        max-width: calc(100% - 80px);
        padding-bottom: 0.5rem;
      }
      
      nav a {
        white-space: nowrap;
      }
    }
  </style>

  <script>
    // „Ç´„ÉÜ„Ç¥„É™„Éº„Å∏„ÅÆ„Çπ„É†„Éº„Çπ„Çπ„ÇØ„É≠„Éº„É´
    document.addEventListener('DOMContentLoaded', () => {
      document.querySelectorAll('.category-menu-item').forEach(link => {
        link.addEventListener('click', (e) => {
          e.preventDefault();
          const targetId = link.getAttribute('href').substring(1);
          const targetElement = document.getElementById(targetId);
          if (targetElement) {
            window.scrollTo({
              top: targetElement.getBoundingClientRect().top + window.scrollY - 100,
              behavior: 'smooth'
            });
          }
        });
      });
      
      // Ë®≠ÂÆö„Éú„Çø„É≥„ÅÆ„Ç§„Éô„É≥„Éà„É™„Çπ„Éä„Éº
      const settingsBtn = document.getElementById('settings-toggle-btn');
      if (settingsBtn) {
        settingsBtn.addEventListener('click', () => {
          const settingsPanel = document.getElementById('settings-panel');
          if (settingsPanel) {
            settingsPanel.style.display = 'block';
            window.dispatchEvent(new CustomEvent('settings-panel-open'));
          }
        });
      }
    });
  </script>
</body>
</html>
