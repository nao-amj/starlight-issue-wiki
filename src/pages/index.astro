---
import { getIssues, generateSlug } from '../lib/github';
import { BASE_PATH, SITE_TITLE, SITE_DESCRIPTION, REPO_URL } from '../config';
import { formatDistance } from 'date-fns';
import { ja } from 'date-fns/locale';
import SearchBar from '../components/SearchBar.astro';

// issue„ÅÆ„Éá„Éº„Çø„ÇíÂèñÂæó
const issues = await getIssues();

// „Ç´„ÉÜ„Ç¥„É™„Éº„Åî„Å®„ÅÆissue‰∏ÄË¶ß„Çí‰ΩúÊàê
const categorizedIssues = issues.reduce((acc, issue) => {
  // „É©„Éô„É´„Åß„Ç´„ÉÜ„Ç¥„É™„Çè„Åë
  const labels = issue.labels || [];
  
  labels.forEach(label => {
    const category = label.name;
    if (!acc[category]) {
      acc[category] = [];
    }
    if (!acc[category].includes(issue)) {
      acc[category].push(issue);
    }
  });
  
  // „Ç´„ÉÜ„Ç¥„É™„Éº„Åå„Å™„ÅÑÂ†¥Âêà„ÅØ„Äå„Åù„ÅÆ‰ªñ„Äç„Å´
  if (labels.length === 0) {
    if (!acc['„Åù„ÅÆ‰ªñ']) {
      acc['„Åù„ÅÆ‰ªñ'] = [];
    }
    acc['„Åù„ÅÆ‰ªñ'].push(issue);
  }
  
  return acc;
}, {});

// „Ç´„ÉÜ„Ç¥„É™„Éº„ÇíÂèñÂæó
const categories = Object.keys(categorizedIssues);

// ÊúÄËøë„ÅÆÊõ¥Êñ∞‰∏ÄË¶ß„Çí‰ΩúÊàêÔºàÊúÄÂ§ß5‰ª∂Ôºâ
const recentIssues = [...issues]
  .sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime())
  .slice(0, 5);

// ÁèæÂú®„ÅÆÊôÇÂàª
const now = new Date();

// ‰∫∫Ê∞ó„ÅÆ„ÅÇ„Çã„Ç≥„É≥„ÉÜ„É≥„ÉÑÔºà„É©„Éô„É´„ÅÆÊï∞„ÅåÂ§ö„ÅÑ„ÇÇ„ÅÆ‰∏ä‰Ωç5‰ª∂Ôºâ
const popularContent = [...issues]
  .sort((a, b) => (b.labels?.length || 0) - (a.labels?.length || 0))
  .slice(0, 5);
---

<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{SITE_TITLE}</title>
  <meta name="description" content={SITE_DESCRIPTION}>
  <link rel="stylesheet" href={`${BASE_PATH}/styles/global.css`}>
</head>
<body>
  <header>
    <div class="container">
      <div class="header-content">
        <h1><a href={BASE_PATH + "/"}>Starlight Issue Wiki</a></h1>
        <nav>
          <a href={BASE_PATH + "/"} class="active">„Éõ„Éº„É†</a>
          <a href={`${BASE_PATH}/wiki/index`}>„Éö„Éº„Ç∏‰∏ÄË¶ß</a>
          <a href={`${BASE_PATH}/wiki/welcome`}>„ÅØ„Åò„ÇÅ„Å´</a>
          <a href={`${BASE_PATH}/zettelkasten.html`} class="special-link">ZettelkastenÁâà</a>
          <a href={REPO_URL}>GitHub</a>
        </nav>
      </div>
    </div>
  </header>

  <div class="hero">
    <div class="container">
      <h1>GitWiki Hub</h1>
      <p>GitHub„ÅÆissue„ÇíÂãïÁöÑ„Å´ÂèñÂæó„Åó„Å¶Wiki„Å®„Åó„Å¶Ë°®Á§∫„Åô„Çã„É¢„ÉÄ„É≥„Å™Web„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥</p>
      <div class="search-wrapper">
        <SearchBar />
      </div>
      <div class="hero-buttons">
        <a href={`${BASE_PATH}/wiki/welcome`} class="hero-button primary">„ÅØ„Åò„ÇÅ„Å¶„Åø„Çã</a>
        <a href={REPO_URL} class="hero-button secondary">GitHub</a>
      </div>
    </div>
  </div>

  <main class="container">
    <div class="dashboard-layout">
      <div class="timeline-section">
        <h2>ÊúÄËøë„ÅÆÊõ¥Êñ∞</h2>
        <ul class="timeline-list">
          {recentIssues.map(issue => {
            const updatedTimeAgo = formatDistance(new Date(issue.updated_at), now, { 
              addSuffix: true,
              locale: ja 
            });
            const slug = generateSlug(issue.title);
            
            return (
              <li class="timeline-item">
                <div class="timeline-meta">
                  <span class="timeline-date">{updatedTimeAgo}</span>
                </div>
                <div class="timeline-content">
                  <h3>
                    <a href={`${BASE_PATH}/wiki/${issue.number}`}>{issue.title}</a>
                  </h3>
                  <div class="timeline-labels">
                    {issue.labels?.map(label => (
                      <span class="timeline-label" style={`background-color: #${label.color}`}>
                        {label.name}
                      </span>
                    ))}
                  </div>
                </div>
              </li>
            );
          })}
        </ul>
        <div class="view-all">
          <a href={`${BASE_PATH}/wiki/index`}>„Åô„Åπ„Å¶„ÅÆ„Éö„Éº„Ç∏„ÇíË¶ã„Çã &rarr;</a>
        </div>
      </div>

      <div class="sidebar-section">
        <div class="popular-content">
          <h2>‰∫∫Ê∞ó„ÅÆ„Ç≥„É≥„ÉÜ„É≥„ÉÑ</h2>
          <ul class="popular-list">
            {popularContent.map(issue => {
              const slug = generateSlug(issue.title);
              return (
                <li class="popular-item">
                  <a href={`${BASE_PATH}/wiki/${issue.number}`}>{issue.title}</a>
                  <div class="popular-labels">
                    {issue.labels?.slice(0, 3).map(label => (
                      <span class="popular-label" style={`background-color: #${label.color}`}>
                        {label.name}
                      </span>
                    ))}
                  </div>
                </li>
              );
            })}
          </ul>
        </div>

        <div class="categories-widget">
          <h2>„Ç´„ÉÜ„Ç¥„É™„Éº</h2>
          <ul class="categories-list">
            {categories.map(category => (
              <li class="category-item">
                <a href={`${BASE_PATH}/category/${category}`}>
                  {category}
                  <span class="category-count">{categorizedIssues[category].length}</span>
                </a>
              </li>
            ))}
          </ul>
        </div>
      </div>
    </div>

    <div class="quick-actions">
      <h2>„ÇØ„Ç§„ÉÉ„ÇØ„Ç¢„ÇØ„Çª„Çπ</h2>
      <div class="action-buttons">
        <a href={`${BASE_PATH}/wiki/welcome`} class="action-button">
          <span class="action-icon">üìö</span>
          <span class="action-text">„ÅØ„Åò„ÇÅ„Å¶„Åø„Çã</span>
        </a>
        <a href={`${BASE_PATH}/wiki/index`} class="action-button">
          <span class="action-icon">üìã</span>
          <span class="action-text">„Éö„Éº„Ç∏‰∏ÄË¶ß</span>
        </a>
        <a href={`${BASE_PATH}/zettelkasten.html`} class="action-button">
          <span class="action-icon">üß†</span>
          <span class="action-text">ZettelkastenÁâà</span>
        </a>
        <a href={REPO_URL + "/issues/new"} class="action-button">
          <span class="action-icon">‚úèÔ∏è</span>
          <span class="action-text">Êñ∞Ë¶è„Éö„Éº„Ç∏‰ΩúÊàê</span>
        </a>
      </div>
    </div>
  </main>

  <footer>
    <div class="container">
      <p>¬© 2025 Starlight Issue Wiki</p>
    </div>
  </footer>

  <style>
    body {
      font-family: system-ui, sans-serif;
      margin: 0;
      padding: 0;
      line-height: 1.6;
      color: #333;
      background-color: #f9f9f9;
    }
    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1rem;
    }
    header {
      background-color: #4d1a9e;
      color: white;
      padding: 1rem 0;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    .header-content {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    header h1 {
      margin: 0;
      font-size: 1.5rem;
    }
    header h1 a {
      color: white;
      text-decoration: none;
    }
    nav {
      display: flex;
      gap: 1.5rem;
    }
    nav a {
      color: white;
      text-decoration: none;
      opacity: 0.9;
      padding: 0.5rem;
      border-radius: 4px;
      transition: all 0.2s;
    }
    nav a:hover {
      opacity: 1;
      background-color: rgba(255, 255, 255, 0.1);
    }
    nav a.active {
      background-color: rgba(255, 255, 255, 0.2);
      font-weight: 500;
    }
    nav a.special-link {
      color: #ffeb3b;
      font-weight: 500;
    }
    .hero {
      background-color: #4d1a9e;
      color: white;
      padding: 4rem 0;
      text-align: center;
    }
    .hero h1 {
      font-size: 3rem;
      margin-bottom: 1rem;
    }
    .hero p {
      font-size: 1.2rem;
      margin-bottom: 2rem;
      opacity: 0.9;
    }
    .search-wrapper {
      max-width: 600px;
      margin: 0 auto 2rem;
    }
    
    .hero-buttons {
      display: flex;
      gap: 1rem;
      justify-content: center;
    }
    .hero-button {
      padding: 0.8rem 1.5rem;
      border-radius: 4px;
      text-decoration: none;
      font-weight: 500;
      transition: all 0.3s;
    }
    .hero-button.primary {
      background-color: white;
      color: #4d1a9e;
    }
    .hero-button.primary:hover {
      background-color: #f0f0f0;
      transform: translateY(-2px);
    }
    .hero-button.secondary {
      background-color: rgba(255, 255, 255, 0.1);
      color: white;
      border: 1px solid rgba(255, 255, 255, 0.3);
    }
    .hero-button.secondary:hover {
      background-color: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
    }
    main {
      padding: 3rem 0;
    }

    .dashboard-layout {
      display: grid;
      grid-template-columns: 2fr 1fr;
      gap: 2rem;
      margin-bottom: 3rem;
    }
    
    .timeline-section h2,
    .sidebar-section h2,
    .quick-actions h2 {
      font-size: 1.5rem;
      margin-bottom: 1.5rem;
      color: #333;
      padding-bottom: 0.5rem;
      border-bottom: 2px solid #eee;
    }
    
    .timeline-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    .timeline-item {
      display: flex;
      margin-bottom: 1rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid #eee;
    }
    .timeline-meta {
      width: 120px;
      flex-shrink: 0;
    }
    .timeline-date {
      font-size: 0.85rem;
      color: #888;
    }
    .timeline-content {
      flex-grow: 1;
    }
    .timeline-content h3 {
      margin: 0;
      font-size: 1.1rem;
    }
    .timeline-content h3 a {
      color: #4d1a9e;
      text-decoration: none;
    }
    .timeline-content h3 a:hover {
      text-decoration: underline;
    }
    .timeline-labels {
      display: flex;
      gap: 0.5rem;
      margin-top: 0.5rem;
    }
    .timeline-label {
      font-size: 0.7rem;
      padding: 0.2rem 0.5rem;
      border-radius: 20px;
      color: #333;
    }
    
    .view-all {
      margin-top: 1.5rem;
      text-align: right;
    }
    .view-all a {
      color: #4d1a9e;
      text-decoration: none;
      font-size: 0.9rem;
    }
    .view-all a:hover {
      text-decoration: underline;
    }
    
    .popular-content,
    .categories-widget {
      background-color: white;
      padding: 1.5rem;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
      margin-bottom: 2rem;
    }
    
    .popular-list,
    .categories-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }
    
    .popular-item {
      margin-bottom: 1rem;
      padding-bottom: 1rem;
      border-bottom: 1px solid #eee;
    }
    
    .popular-item:last-child {
      margin-bottom: 0;
      padding-bottom: 0;
      border-bottom: none;
    }
    
    .popular-item a {
      color: #4d1a9e;
      text-decoration: none;
      font-weight: 500;
      display: block;
      margin-bottom: 0.3rem;
    }
    
    .popular-item a:hover {
      text-decoration: underline;
    }
    
    .popular-labels {
      display: flex;
      gap: 0.3rem;
    }
    
    .popular-label {
      font-size: 0.65rem;
      padding: 0.1rem 0.4rem;
      border-radius: 20px;
      color: #333;
    }
    
    .category-item {
      margin-bottom: 0.5rem;
    }
    
    .category-item a {
      display: flex;
      justify-content: space-between;
      padding: 0.5rem;
      text-decoration: none;
      color: #333;
      border-radius: 4px;
      transition: background-color 0.2s;
    }
    
    .category-item a:hover {
      background-color: #f5f5f5;
      color: #4d1a9e;
    }
    
    .category-count {
      background-color: #eee;
      padding: 0.1rem 0.5rem;
      border-radius: 20px;
      font-size: 0.8rem;
      color: #666;
    }
    
    .quick-actions {
      margin-top: 2rem;
    }
    
    .action-buttons {
      display: flex;
      justify-content: space-between;
      gap: 1rem;
    }
    
    .action-button {
      flex: 1;
      display: flex;
      flex-direction: column;
      align-items: center;
      background-color: white;
      padding: 1.5rem;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
      transition: all 0.3s;
      text-decoration: none;
      color: #333;
    }
    
    .action-button:hover {
      transform: translateY(-5px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    }
    
    .action-icon {
      font-size: 2rem;
      margin-bottom: 0.5rem;
    }
    
    .action-text {
      font-weight: 500;
    }
    
    footer {
      background-color: #f5f5f5;
      padding: 2rem 0;
      text-align: center;
      margin-top: 3rem;
      color: #888;
    }
    
    /* „É¨„Çπ„Éù„É≥„Ç∑„Éñ„Éá„Ç∂„Ç§„É≥ */
    @media (max-width: 768px) {
      .header-content {
        flex-direction: column;
        gap: 1rem;
      }
      nav {
        width: 100%;
        justify-content: space-between;
        flex-wrap: wrap;
      }
      .dashboard-layout {
        grid-template-columns: 1fr;
      }
      .timeline-meta {
        width: 80px;
      }
      .hero h1 {
        font-size: 2rem;
      }
      .hero p {
        font-size: 1rem;
      }
      .action-buttons {
        flex-wrap: wrap;
      }
      .action-button {
        min-width: calc(50% - 1rem);
      }
    }
  </style>
</body>
</html>
