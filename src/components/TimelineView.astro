---
// タイムラインビューコンポーネント
import { format } from 'date-fns';
import { ja } from 'date-fns/locale';
import { BASE_PATH } from '../config';

// propsの型定義
interface Props {
  issues: any[];
  limit?: number;
  titleOnly?: boolean; // タイトルのみ表示するかどうか
}

// propsを受け取る
const { issues, limit = 10, titleOnly = false } = Astro.props;

// issueを日付でソート
const sortedIssues = [...issues]
  .sort((a, b) => new Date(b.updated_at).getTime() - new Date(a.updated_at).getTime())
  .slice(0, limit);

// 色の明るさをチェックする関数
function isLightColor(hexColor) {
  // 16進数の色をRGBに変換
  const r = parseInt(hexColor.substr(0, 2), 16);
  const g = parseInt(hexColor.substr(2, 2), 16);
  const b = parseInt(hexColor.substr(4, 2), 16);
  
  // 明るさを計算（一般的な知覚の重み付け）
  const brightness = (r * 0.299 + g * 0.587 + b * 0.114) / 255;
  
  // 明るさが0.5より大きければ明るい色
  return brightness > 0.5;
}
---

<div class="timeline">
  {sortedIssues.map((issue) => {
    const date = new Date(issue.updated_at);
    return (
      <div class="timeline-item">
        <div class="timeline-date">
          {format(date, 'yyyy年MM月dd日 HH:mm', { locale: ja })}
        </div>
        <div class="timeline-content">
          <a href={`${BASE_PATH}/wiki/${issue.number}`} class="timeline-title">
            <h3>{issue.title}</h3>
          </a>
          <div class="timeline-meta">
            <span class="timeline-number">#{issue.number}</span>
            {issue.labels && issue.labels.length > 0 && (
              <div class="timeline-labels">
                {issue.labels.map((label) => {
                  const isLight = isLightColor(label.color);
                  return (
                    <a 
                      href={`${BASE_PATH}/category/${label.name.toLowerCase()}`}
                      class="tag"
                      style={`background-color: #${label.color}40; color: ${isLight ? '#333333' : '#ffffff'}; border: 1px solid #${label.color}80;`}
                    >
                      {label.name}
                    </a>
                  );
                })}
              </div>
            )}
          </div>
          {!titleOnly && issue.body && (
            <div class="timeline-excerpt">
              {issue.body.length > 150 ? `${issue.body.substring(0, 150)}...` : issue.body}
            </div>
          )}
        </div>
      </div>
    );
  })}
</div>

<style>
  .timeline-title h3 {
    margin: 0 0 0.5rem 0;
    font-size: 1.1rem;
  }
  
  .timeline-title {
    text-decoration: none;
    color: var(--color-text);
  }
  
  .timeline-title:hover h3 {
    color: var(--color-primary);
  }
  
  .timeline-meta {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    margin-bottom: 0.5rem;
    flex-wrap: wrap;
  }
  
  .timeline-number {
    font-size: 0.85rem;
    color: var(--color-text-light);
  }
  
  .timeline-labels {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }
  
  .timeline-excerpt {
    font-size: 0.9rem;
    color: var(--color-text-light);
    white-space: pre-line;
  }

  .tag {
    display: inline-block;
    padding: 0.25em 0.65em;
    border-radius: 1rem;
    font-size: 0.75rem;
    font-weight: 600;
    text-decoration: none;
    line-height: 1.2;
    transition: all 0.2s;
  }
  
  .tag:hover {
    transform: translateY(-1px);
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
</style>
