---
/*
 * DayOfWeekCard Component
 *
 * 曜日別のアクティビティを表示するカードコンポーネント
 */

interface Props {
  title?: string;
  dayOfWeekData?: any[];
  className?: string;
}

const { 
  title = "曜日別アクティビティ", 
  dayOfWeekData = [],
  className = ""
} = Astro.props;

// 曜日ごとのデータを初期化
const days = [
  { name: '日曜日', shortName: '日', count: 0 },
  { name: '月曜日', shortName: '月', count: 0 },
  { name: '火曜日', shortName: '火', count: 0 },
  { name: '水曜日', shortName: '水', count: 0 },
  { name: '木曜日', shortName: '木', count: 0 },
  { name: '金曜日', shortName: '金', count: 0 },
  { name: '土曜日', shortName: '土', count: 0 }
];

// dayOfWeekDataから曜日データを集計
if (dayOfWeekData && dayOfWeekData.length > 0) {
  dayOfWeekData.forEach((item) => {
    const dayIndex = item.dayOfWeek !== undefined ? item.dayOfWeek % 7 : -1;
    if (dayIndex >= 0 && dayIndex < 7) {
      days[dayIndex].count++;
    }
  });
}

// 最大値の計算（グラフのスケール用）
const maxCount = Math.max(...days.map(day => day.count));
---

<div class={`day-of-week-card ${className}`}>
  <div class="card-header">
    <h3>{title}</h3>
  </div>
  <div class="card-content">
    <div class="days-grid">
      {days.map((day) => (
        <div class="day-block">
          <div class="day-name">
            <span class="day-short">{day.shortName}</span>
            <span class="day-full">{day.name}</span>
          </div>
          <div class="bar-container">
            <div 
              class="day-bar" 
              style={`width: ${maxCount > 0 ? (day.count / maxCount) * 100 : 0}%`}
              title={`${day.name}: ${day.count}件`}
            ></div>
            <span class="day-count">{day.count}</span>
          </div>
        </div>
      ))}
    </div>
  </div>
</div>

<style>
  .day-of-week-card {
    border: 1px solid var(--sl-color-gray-5, #e2e8f0);
    border-radius: 0.5rem;
    overflow: hidden;
    background-color: var(--sl-color-white, #ffffff);
    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
  }

  .card-header {
    background-color: var(--sl-color-gray-1, #f8fafc);
    padding: 0.75rem 1rem;
    border-bottom: 1px solid var(--sl-color-gray-5, #e2e8f0);
  }

  .card-header h3 {
    margin: 0;
    font-size: 1rem;
    font-weight: 600;
    color: var(--sl-color-gray-9, #334155);
  }

  .card-content {
    padding: 1rem;
  }

  .days-grid {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .day-block {
    display: flex;
    align-items: center;
  }

  .day-name {
    width: 4rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .day-short {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem;
    height: 1.5rem;
    background-color: var(--sl-color-gray-2, #f1f5f9);
    border-radius: 50%;
    font-size: 0.75rem;
    font-weight: 500;
    color: var(--sl-color-gray-9, #334155);
  }

  .day-full {
    display: none;
    font-size: 0.875rem;
    color: var(--sl-color-gray-7, #64748b);
  }

  .bar-container {
    flex: 1;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    height: 1.25rem;
  }

  .day-bar {
    height: 100%;
    background-color: var(--sl-color-indigo-5, #6366f1);
    border-radius: 0.25rem;
    min-width: 4px;
    transition: width 0.3s ease;
  }

  .day-count {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--sl-color-gray-9, #334155);
    min-width: 1.5rem;
    text-align: right;
  }

  @media (min-width: 640px) {
    .day-full {
      display: block;
    }
    
    .day-name {
      width: 6rem;
    }
  }
</style>