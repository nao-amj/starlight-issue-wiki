---
import type { IssueData } from '../types/github';

interface Props {
  issues: IssueData[];
  title: string;
  category?: string;
  limit?: number;
  showViewAll?: boolean;
}

const { issues, title, category, limit = 5, showViewAll = true } = Astro.props;

// カテゴリーでフィルタリング
const filteredIssues = category 
  ? issues.filter(issue => 
      issue.labels.some(label => 
        label.name.toLowerCase() === category.toLowerCase()
      )
    )
  : issues;

// 表示数を制限
const displayIssues = filteredIssues.slice(0, limit);

// カテゴリーページへのリンク
const categoryLink = category ? `/category/${category.toLowerCase()}` : '/pages';
---

<div class="category-list">
  <div class="category-header">
    <h2>{title}</h2>
    {showViewAll && filteredIssues.length > limit && (
      <a href={categoryLink} class="view-all">すべて表示 →</a>
    )}
  </div>
  
  {displayIssues.length > 0 ? (
    <div class="issue-list">
      {displayIssues.map(issue => (
        <div class="issue-card">
          <h3>
            <a href={`/wiki/${issue.number}`}>{issue.title}</a>
          </h3>
          <div class="issue-labels">
            {issue.labels.map(label => (
              <span 
                class="tag" 
                style={`background-color: #${label.color}20; color: #${label.color}; border: 1px solid #${label.color}40;`}
              >
                {label.name}
              </span>
            ))}
          </div>
          <div class="issue-card-meta">
            作成日: {new Date(issue.created_at).toLocaleDateString('ja-JP')}
            {issue.updated_at !== issue.created_at && (
              ` (更新日: ${new Date(issue.updated_at).toLocaleDateString('ja-JP')})`
            )}
          </div>
        </div>
      ))}
    </div>
  ) : (
    <p>このカテゴリーには現在コンテンツがありません。</p>
  )}
</div>

<style>
  .category-list {
    margin-bottom: 2rem;
  }
  
  .category-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
  }
  
  .view-all {
    font-size: 0.9rem;
    color: var(--sl-color-text-accent);
    text-decoration: none;
  }
  
  .view-all:hover {
    text-decoration: underline;
  }
  
  .issue-list {
    display: grid;
    gap: 1rem;
  }
  
  .issue-labels {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin: 0.5rem 0;
  }
  
  @media (min-width: 50rem) {
    .issue-list {
      grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    }
  }
</style>
