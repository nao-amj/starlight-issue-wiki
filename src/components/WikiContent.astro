---
import { findBacklinks, loadZettelkastenSettings } from '../lib/zettelkasten';
import BacklinkList from './BacklinkList.astro';
import type { GitHubIssue } from '../data/types';

export interface Props {
  content: string;
  issueUrl: string;
  currentIssue: GitHubIssue;
  allIssues: GitHubIssue[];
}

const { content, issueUrl, currentIssue, allIssues } = Astro.props;

// Zettelkasten設定を読み込み
const zettelkastenConfig = loadZettelkastenSettings();

// バックリンクを検索
let backlinks = [];
try {
  if (zettelkastenConfig.enabled && zettelkastenConfig.showBacklinks) {
    backlinks = findBacklinks(currentIssue.number, allIssues);
  }
} catch (error) {
  console.error('バックリンク検索中にエラーが発生しました:', error);
}
---

<div class="wiki-content">
  <div class="content" set:html={content} />
  
  {zettelkastenConfig.enabled && zettelkastenConfig.showBacklinks && backlinks.length > 0 && (
    <BacklinkList backlinks={backlinks} currentIssueNumber={currentIssue.number} />
  )}
  
  <div class="edit-links">
    <a href={issueUrl} target="_blank" rel="noopener noreferrer">
      GitHubでこのページを編集する
    </a>
  </div>
</div>

<style>
  .wiki-content {
    width: 100%;
  }
  
  .content :global(img) {
    max-width: 100%;
    height: auto;
  }
  
  .content :global(pre) {
    padding: 1rem;
    border-radius: 0.5rem;
    background-color: var(--sl-color-gray-6);
    overflow-x: auto;
  }
  
  /* Zettelkastenモード用のスタイル */
  .content :global(.wiki-link) {
    text-decoration: none;
    border-bottom: 1px dashed var(--color-primary, #4f6df5);
    color: var(--color-primary, #4f6df5);
    transition: all 0.2s;
  }
  
  .content :global(.wiki-link:hover) {
    background-color: rgba(79, 109, 245, 0.1);
    border-bottom-style: solid;
  }
  
  .content :global(.wiki-link.bidirectional) {
    border-bottom: 2px solid var(--color-success, #0fa968);
    color: var(--color-success, #0fa968);
    font-weight: 500;
  }
  
  .content :global(.wiki-link.bidirectional:hover) {
    background-color: rgba(15, 169, 104, 0.1);
  }
  
  .content :global(.wiki-link-unlinked) {
    text-decoration: none;
    border-bottom: 1px dotted #999;
    color: #666;
  }
  
  .edit-links {
    margin-top: 2rem;
    padding-top: 1rem;
    border-top: 1px solid var(--sl-color-gray-5);
    font-size: 0.9rem;
  }
  
  .edit-links a {
    color: var(--sl-color-text-accent);
    text-decoration: none;
  }
  
  .edit-links a:hover {
    text-decoration: underline;
  }
</style>

<script is:inline>
  // Zettelkasten設定の変更を検知してページをリロード
  document.addEventListener('DOMContentLoaded', () => {
    window.addEventListener('zettelkasten-settings-changed', () => {
      // 設定変更後に少し待ってからリロード
      setTimeout(() => {
        window.location.reload();
      }, 500);
    });
    
    // デバッグ: 特定のクラスの要素を確認
    const wikiLinks = document.querySelectorAll('.wiki-link');
    const bidirectionalLinks = document.querySelectorAll('.wiki-link.bidirectional');
    
    console.log(`${wikiLinks.length} WikiLinks found`);
    console.log(`${bidirectionalLinks.length} Bidirectional links found`);
  });
</script>
