---
import { BASE_PATH, SITE_TITLE, REPO_URL } from '../config';
import SettingsPanel from '../components/SettingsPanel.astro';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = 'GitHubのIssueを使って管理するWikiサイト' } = Astro.props;
---

<!DOCTYPE html>
<html lang="ja">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>{title} | {SITE_TITLE}</title>
  <meta name="description" content={description}>
  <link rel="stylesheet" href={`${BASE_PATH}/styles/global.css`}>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;500;700&display=swap" rel="stylesheet">
</head>
<body>
  <header>
    <div class="container">
      <div class="header-content">
        <h1><a href={BASE_PATH + "/"}>Starlight Issue Wiki</a></h1>
        <nav>
          <a href={BASE_PATH + "/"}>ホーム</a>
          <a href={`${BASE_PATH}/wiki/1`}>はじめに</a>
          <a href={REPO_URL}>GitHub</a>
        </nav>
      </div>
    </div>
  </header>

  <main class="container">
    <slot />
  </main>

  <footer>
    <div class="container">
      <p>&copy; 2025 Starlight Issue Wiki</p>
    </div>
  </footer>

  <!-- 設定パネル -->
  <SettingsPanel />

  <style is:global>
    /* Zettelkastenモードのスタイルを追加 */
    body.zettelkasten-mode {
      --zettelkasten-color: var(--color-primary, #4f6df5);
      --zettelkasten-bidirectional-color: var(--color-success, #0fa968);
    }

    /* フラッシュメッセージのスタイル */
    .save-message {
      position: fixed;
      bottom: 2rem;
      left: 50%;
      transform: translateX(-50%);
      background-color: var(--color-success, #0fa968);
      color: white;
      padding: 0.75rem 1.5rem;
      border-radius: 0.5rem;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
      z-index: 1000;
      animation: fadeInOut 2s ease-in-out;
      text-align: center;
    }

    @keyframes fadeInOut {
      0%, 100% { opacity: 0; }
      10%, 90% { opacity: 1; }
    }
  </style>

  <script is:inline>
    // Zettelkastenモードの設定を読み込み、適用する
    document.addEventListener('DOMContentLoaded', () => {
      try {
        // ローカルストレージから設定を読み込み
        const savedConfig = localStorage.getItem('zettelkastenConfig');
        if (savedConfig) {
          const config = JSON.parse(savedConfig);
          
          // Zettelkastenモードが有効ならbodyにクラスを追加
          if (config.enabled) {
            document.body.classList.add('zettelkasten-mode');
          } else {
            document.body.classList.remove('zettelkasten-mode');
          }
        }
      } catch (error) {
        console.error('Zettelkasten設定の読み込みに失敗しました:', error);
      }
    });
  </script>
</body>
</html>
